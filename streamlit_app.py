import streamlit as st

st.set_page_config(
    page_title='Article Automatisation Python by Naltos',
    page_icon='ü§ñ'
)

st.title("Automatisation windows ü™ê")
st.write("Tu en as marre de r√©p√©ter certaines action et tu souhaites les automatiser ? Regarde donc ce tuto !")

tab1, tab2, tab3, tab4 = st.tabs(["Introduction", "Installation", "Code", "Exercice"])

with tab1:
    st.header("Qu'allons nous faire ?")
    st.write("Dans ce tuto, nous allons apprendre √† **:blue[automatiser]** la :green[cr√©ation] / :green[modification] / :green[lecture et suppresion] de nos fichiers ainsi que de nos dossiers !")
    st.header("Quels sont les pr√©requis pour suivre ce tuto ?")
    st.write("- Conna√Ætre les bases de la programmation en Python (ex: Fonctions, Modules, Conditions, etc)")
    st.write("- D'un IDE quelconque (ex: VSCode, Notepad++, Spyder)")
    st.write("- ~~D'un virement de 200e √† Naltos~~")
    st.header("C'est parti !‚ö°Ô∏è")
    
with tab2:
    st.header("üì¶ Les modules n√©cessaires √† ce tuto :")    
    st.write("- OS")
    st.write("- Rich")
    code = '''pip install Rich'''
    st.code(code, language='python')
    st.write("- Pathlib")
    st.write("Les autres modules n√©cessaires √† ce tuto sont int√©gr√©s de base √† Python, nous n'avons donc pas besoin de les installer.")
    
    st.header("üîé A quoi vont-ils servirent ?")
    st.write("- OS va nous permettre d'int√©ragir avec notre syst√®me d'exploitation")
    st.write("- Rich servira seulement √† styliser notre console")
    st.write('- Pathlib va nous permettre de parcourir nos diff√©rents dossiers')
    
with tab3:
    st.header("üíª A vos marque, pr√™t, codez !")
    st.write("Attaquons nous √† la base de notre code, nous allons d√©finir une fonction 'main' qui nous servira d'executable pour le reste de nos fonctions:")
    code = ('''
            def main():
                pass
                
            if __name__ == "__main__":
                main()
            ''')
    st.code(code, language='python')
    st.write("Pour l'instant, nous n'avons aucune fonctions √† ex√©cuter donc nous utilisons le mot cl√© 'pass' pour indiquer √† notre code d'ignorer cette fonction.")
    st.write("La seconde ligne est une condition qui permet de v√©rifier que le fichier ex√©cuter est bien le fichier racine de notre projet.")
    
    st.header("Ecrivons notre premi√®re fonction !")
    st.write("Pour cette premi√®re fonction, nous allons automatiser la cr√©ation d'un dossier:")
    create_mkdir = ('''
                    # Ici, on indique le type de nos arguments (donc ici string) ainsi que le type de retour de notre fonction (√©galement string)
                    def create_mkdir(path: str, directory_name: str) -> str:
                        # not isinstance permet de v√©rifier si la valeur passer dans notre variable path est bien de type string
                        if not isinstance(path, str):
                            print("Valeur incorrect!")
                        # Pareil pour ici
                        elif not isinstance(directory_name, str):
                            print("Valeur incorrect!")
                        else:
                            os.mkdir(path + directory_name)
                            console.print("Dossier cr√©er avec succ√®s ! => [cyan]{}{}[/]".format(path, directory_name), style='bold underline green')
                    ''')
    st.code(create_mkdir, language='python')
    st.write("Pour ex√©cuter cette fonction, nous avons besoin de la rajouter dans notre fonction main():")
    main = ('''
            def main():
                create_mkdir()
                
            if __name__ == "__main__":
                main()
    ''')
    st.code(main, language='python')
    st.write("Seulement, nous avons sp√©cifi√©s des arguments √† passer dans notre fonction plus haut, nous avons donc besoin de les r√©cup√©rer:")
    main2 = ('''
            def main():
                path = console.input("[bold blue]Merci de sp√©cifier le chemin d'acc√®s dans lequel vous souhaitez cr√©er votre dossier: [/]")
                directory_name = console.input("[bold blue]Merci de sp√©cifier le nom du dossier que vous souhaitez cr√©er [bold underline red](Merci de ne pas mettre d'espace, seulement des caract√®res sp√©ciaux: '_, -')[/]: [bold magenta]")
                create_mkdir(path, directory_name)
                
            if __name__ == "__main__":
                main()
    ''')
    st.code(main2, language='python')
    st.write("Et voil√†, vous venez de cr√©er avec succ√®s votre premier dossier depuis une ligne de commande !")
    
with tab4:
    st.header("üìì Exercice")
    st.write("Afin de tester vos nouvelles connaissances, voici une s√©rie de fonctions que vous pouvez coder:")
    st.write('- Une fonction qui permet de supprimer un dossier.')
    st.write('- Une fonction qui permet de lister les √©l√©ments d\'un dossier.')
    st.write('- Permettre √† l\'utilisateur de choisir quel action il souhaite ex√©cuter.')
    st.header("üß† Bon chance !")
    st.image(
        "https://media.giphy.com/media/rHR8qP1mC5V3G/giphy.gif",
        width=400
    )
